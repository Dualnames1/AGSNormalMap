// room script file

function room_AfterFadeIn()
{
  float dur = 2.0  +0.2;
  dur = 0.1;
  
  
 // cChar1.TweenTransparency(dur +0.4, 0, eEaseInTween, eNoBlockTween);
 // cEgo.TweenTransparency(dur +0.2, 0, eEaseInTween, eNoBlockTween);
  cEgo.PlaceOnWalkableArea();
    gFade.Transparency=100;
  
  mouse.Visible =true;
  cEgo.Transparency=0;
  
}



function on_key_press(eKeyCode keycode) 
{
 
  

  
}

int lumcEgo=128;
int scalings=-1;
int pulseRadius=0;
bool reversePulse=true;
int pulseDelay=0;



function late_repeatedly_execute_always()///room_RepExec()
{
  
  
  pulseDelay++;
  
  if (pulseDelay>2)
  {
  
  if (reversePulse)pulseRadius++;
  if (pulseRadius >5 && reversePulse)
  {
    pulseRadius=5;
    reversePulse=false;
  }
  if (!reversePulse) pulseRadius--;
  if (pulseRadius<0 && !reversePulse)
  {
    pulseRadius=0;
    reversePulse=true;
  }
  
  pulseDelay=0;
  
  }
  
  
 
  int sp=8;
  

  //*
  
  
  if (cEgo.CharacterCloseToLight(5, 200))
  {
    CreateLight(5, 50, 65, 20, true);
    //SetLightState(5, true);
    if (lumcEgo+sp<128) lumcEgo+=sp;
    else lumcEgo=128;
    
    
    SetLightColor(5, 248, 182, 58, lumcEgo);
    SetLightZ(5, -1);
  }
  else 
  {
    
    //SetLightState(5, true);
    
    if (lumcEgo-sp > 0)
    {
      CreateLight(5, 50, 65, 20, true);
      lumcEgo-=sp;
    }
    else 
    {
      if (
      (cEgo.CharacterCloseToLight(4, 25*2) )
      || (cEgo.CharacterCloseToLight(3, 25*2))
      || (cEgo.CharacterCloseToLight(2, 15*2) )
      || (cEgo.CharacterCloseToLight(1, 15*2))
      | (cEgo.CharacterCloseToLight(0, 15*2))
      )
      {
        CreateLight(6, 415, 77, 70, false);
        //CloseLight(5);
        CreateLight(5, 50, 65, 20, false);
      }
      else 
      {
        CreateLight(5, 50, 65, 20, true);
         if (cEgo.CharacterCloseToLight(6, 180))
         {
           CreateLight(6, 415, 77, 70, true);
           SetLightColor(6, 248, 182, 58, lumcEgo);
           SetLightZ(6, -1);
         }
         else CreateLight(6, 415, 77, 70, false);
      }
      lumcEgo=0;
    }
    
    SetLightColor(5, 248, 182, 58, lumcEgo);
  
  
  
  //cEgo.SayBackground(String.Format("%d %d %d %d",GetLightState(0), GetLightState(1), GetLightState(5), GetLightState(6)));
  
  
  if (olights.Frame!=1) 
  {    
    CreateLightX(0, 277+6, 169+6, 15, true); 
    if (lumcEgo-sp > 0)lumcEgo-=sp;
    else lumcEgo=0;
    SetLightRadius(0, 15+pulseRadius);
    SetLightColor(0, 240, 159, 183, lumcEgo); 
  }
  else 
  {    
    //if (GetLightZ(0)>=0) SetLightRadius(0, 0);
    SetLightColor(0, 240, 159, 183, lumcEgo);
  }
  
  
  if (olights.Frame!=2) 
  {
    //CreateLightX(1, 237+6, 192+6, 15, false); 
    //if (cEgo.CharacterCloseToLight(1, 15*2))
    //{
    CreateLightX(1, 237+6, 192+6, 15, true); 
    
    SetLightRadius(1, 15+pulseRadius);
    SetLightColor(1, 240, 159, 183, lumcEgo); 
   // }
  }
  else 
  {
    
    //if (GetLightZ(1)>=0) SetLightRadius(1, 0);
    SetLightColor(1, 240, 159, 183, lumcEgo);
  }
  
  if (olights.Frame!=3) 
  {
    CreateLightX(2, 240+6, 242+6, 15, true); 
    
    SetLightRadius(2, 15+pulseRadius);
    SetLightColor(2, 240, 159, 183, lumcEgo); 
  }
  else 
  {
    
    //if (GetLightZ(2)>=0) SetLightRadius(2, 0);
    SetLightColor(2, 240, 159, 183, lumcEgo);
  }
  
  if (olights.Frame!=4) 
  {
    CreateLightX(3, 444+10, 301+10, 25, true); 

    SetLightRadius(3, 25+pulseRadius);
    SetLightColor(3, 240, 159, 183, lumcEgo); 
  }
  else 
  {
   
    
    //if (GetLightZ(3)>=0) SetLightRadius(3, 0);
    SetLightColor(3, 240, 159, 183, lumcEgo);
  }
  
  if (olights.Frame!=5) 
  {
    CreateLightX(4, 519+10, 290+6, 25, true); 

    SetLightRadius(4, 25+pulseRadius);
    SetLightColor(4, 240, 159, 183, lumcEgo); 
  }
  else 
  {
    //if (GetLightZ(4)>=0) SetLightRadius(4, 0);
    SetLightColor(4, 240, 159, 183, lumcEgo);
  }
  
  }
  
  
  cEgo.UpdateView(VIEW1);
  
  
  
  /*
  
  
  
  
  if (
  (cEgo.CharacterCloseToLight(4, GetLightRadius(4)*2) && GetLightState(4))
  || (cEgo.CharacterCloseToLight(3, GetLightRadius(3)*2)&& GetLightState(3))
  || (cEgo.CharacterCloseToLight(2, GetLightRadius(2)*2) && GetLightState(2))
  || (cEgo.CharacterCloseToLight(1, GetLightRadius(1)*2)&& GetLightState(1))
  || (cEgo.CharacterCloseToLight(0, GetLightRadius(0)*2)&& GetLightState(0))
  )
  {
    
    if (lumcEgo-sp > 0)lumcEgo-=sp;
    else 
    {
      SetLightState(5, false);
      lumcEgo=0;
    }
    
    
    
    SetLightState(6, false);
  }
  else 
  {
    CreateLight(6, 361, 134, 40, false);
    if (cEgo.CharacterCloseToLight(6, 200))
    {
      SetLightState(6, true);
      SetLightColor(6, 248, 182, 58, 4);
      SetLightZ(6, -1);
    }
    else SetLightState(6, false);
  }
  //*/
  
  //CreateLight(7, mouse.x, mouse.y, 50, true);
  //SetLightColor(7, 248, 182, 58, 4);
 // SetLightZ(7, 1);
  
  
  //cEgo.SayBackground(String.Format("%d %d",cEgo.x, cEgo.y));
  //lumcEgo=128;
  
  //if (GetLightState(5
  
  
  
  
  //CreateLight(1, mouse.x, mouse.y, 150, true);
  //SetLightColor(1, 0, 255, 0);
  
 // cEgo.x=mouse.x;
 // cEgo.y=mouse.y;
}


function room_Load()
{
cEgo.x=0;
 olights.SetView(VIEW13, 0, 0);
 olights.Animate(0, 3, eRepeat, eNoBlock, eForwards);
  Debug(4, 1);
  game.debug_mode=true;
  SaveView(VIEW1);
  
 // SetLightZ(0, 1);
//  SetLightZ(1, 1);
 // SetLightZ(2, 1);
 // SetLightZ(3, 1);
 // SetLightZ(4, 1);
 // SetLightZ(5, 1);
 
 cEgo.x=255;
  cEgo.y=181;
  
  
  
}

int key = 0;


function room_RepExec()
{
//
//
  
  if (IsKeyPressed(eKeyDownArrow)){ cEgo.y+=1; Wait(10);}
  else if (IsKeyPressed(eKeyUpArrow)){ cEgo.y-=1; Wait(10);}
  if (IsKeyPressed(eKeyLeftArrow)) {cEgo.x-=1; Wait(10);}
  else if (IsKeyPressed(eKeyRightArrow)){ cEgo.x+=1; Wait(10);}
  
 
  
}
